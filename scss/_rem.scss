@charset "UTF-8";
/*
 *以750设计稿为例
 *页面每 dpr 最大宽度（即页面宽度/dpr） = 750，REM 换算比值为 10。
 *对应 css 开发，任何弹性尺寸均使用 rem 单位，rem 默认宽度为 视觉稿宽度 / 10;
 *scss 中 $ppr(pixel per rem) 变量写法 -- $ppr: 750px/10/1rem;
 *元素尺寸写法 --  body { width: 750px/$ppr; }
 */
$divide: 10 !default;
$pswWidth: 750 !default;
$ppr: $pswWidth * 1px / $divide/ 1rem;// 定义单位

/**
 * @description 针对多个值转换
 * @param {String} $name - 属性名
 * @param {number} $value - 设计稿元素尺寸
 * @include pxs2rem(margin, 240, 200);
 */
@mixin pxs2rem($name, $values...) {
    $max: length($values);
    $remValues: '';
    @for $i from 1 through $max {
        $value: nth($values, $i) * $divide / $pswWidth;
        $remValues: #{$remValues + $value}rem;
        @if $i < $max {
            $remValues: #{$remValues + " "};
        }
    }
    #{$name}: $remValues;
}

/**
 * @description 根据设计稿元素对应尺寸转换为rem单位
 * @description 基数：以設計稿為750為例，則基數為75
 * @param {String} $name - 属性名
 * @param {number} $px - 设计稿元素尺寸
 * @include px2rem(width, 240);
 */
@mixin px2rem($name, $px){
    #{$name}: $px / ($pswWidth / $divide) * 1rem;
}
@function px2rem($px){
    @return $px / ($pswWidth / $divide) * 1rem;
}
/**
 * @description 在不同dpr下设置对应的px
 * @param {String} $name - 属性名
 * @param {number} $px - 设计稿元素尺寸
 * @include px2px(font-size, 32);
 */
@mixin px2px($name, $px){
    #{$name}: round($px / 2) * 1;
    [data-dpr="2"] &{
        #{$name}: $px * 1;
    }
    [data-dpr="3"] &{
        #{$name}: round($px / 2 * 3) * 1;
    }
}

/**
 * @description 在不同dpr下设置对应的px（适用于同时设置多个属性）
 * @param {object} $maps - 属性名
 * @param {number} $dpr - 设置支持的最高像素比，默认为3
 * @include pxs2px($maps: (
        width: 200px,
        height: 200px
    ));
 */
@mixin pxs2px($maps, $dpr : 3){
    @for $i from 1 through $dpr {
        $multiple: 1;
        $num: 1;
        @if $i == 1 {
            $num: 2;
            @each $type, $val in $maps{
                #{$type}: ceil($val / $num) * $multiple;
            }
        }@else{
            $multiple: $multiple * $i;
            $num: 2;
            [data-dpr="#{$i}"] &{
                @each $type, $val in $maps{
                    #{$type}: ceil($val / $num) * $multiple;
                }
            }
        }
        
    }
}